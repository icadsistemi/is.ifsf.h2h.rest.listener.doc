openapi: 3.0.0
x-stoplight:
  id: 2ebhzpp6a9rxu
info:
  title: is.ifsf.h2h.rest.listener.doc
  version: 0.0.1
  description: ''
servers:
  - url: 'http://localhost:3000'
paths:
  '/clients/{clientID}/events/{correlationID}/paymentRequests':
    post:
      summary: Send a Payment request
      operationId: post-user
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusReturn:
                    $ref: '#/components/schemas/StatusReturn'
                  paymentRequestsResponse:
                    $ref: '#/components/schemas/PaymentRequestsResponse'
                required:
                  - statusReturn
                  - paymentRequestsResponse
              examples:
                Example 1:
                  value:
                    statusReturn:
                      timestamp: '2019-08-24T14:15:22Z'
                      result: success
                      error: ERRCD_OK
                      message: string
                    paymentRequestsResponse:
                      iccDataResponse: string
                      allowedProducts:
                        - productCode: 999
                      originalAmount: string
                      transactionAmount: string
                      approvedLimit:
                        quantity:
                          value: string
                          uom: L
                        amount: string
                      authorizationCode: string
                      completionRequired: 'yes'
                      customerMessage: string
                      loyaltyRestriction: 'yes'
                      taxData: string
                      transactionID: string
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusReturn:
                    $ref: '#/components/schemas/StatusReturn'
                required:
                  - statusReturn
              examples:
                Example 1:
                  value:
                    statusReturn:
                      timestamp: '2009-11-20T17:30:50'
                      result: failure
                      error: ERRCD_BADREQUEST
                      message: Bad request
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusReturn:
                    $ref: '#/components/schemas/StatusReturn'
                required:
                  - statusReturn
              examples:
                Example 1:
                  value:
                    statusReturn:
                      timestamp: '2009-11-20T17:30:50'
                      result: authentificationError
                      error: ERRCD_UNAUTHORIZED
                      message: Credential doesn’t allow operation
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusReturn:
                    $ref: '#/components/schemas/StatusReturn'
                required:
                  - statusReturn
              examples:
                Example 1:
                  value:
                    statusReturn:
                      timestamp: '2009-11-20T17:30:50'
                      result: authorizationError
                      error: ERRCD_FORBIDDEN
                      message: Request on resource not allowed
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusReturn:
                    $ref: '#/components/schemas/StatusReturn'
                required:
                  - statusReturn
              examples:
                Example 1:
                  value:
                    statusReturn:
                      timestamp: '2009-11-20T17:30:50'
                      result: invalidUrl
                      error: ERRCD_NOTFOUND
                      message: URI doesn’t point to any known resource
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusReturn:
                    $ref: '#/components/schemas/StatusReturn'
                required:
                  - statusReturn
              examples:
                Example 1:
                  value:
                    statusReturn:
                      timestamp: '2009-11-20T17:30:50'
                      result: invalidHttpMethod
                      error: ERRCD_METHODNOTALLOWED
                      message: HTTP method not allowed
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusReturn:
                    $ref: '#/components/schemas/StatusReturn'
                required:
                  - statusReturn
              examples:
                Example 1:
                  value:
                    statusReturn:
                      timestamp: '2009-11-20T17:30:50'
                      result: failure
                      error: ERRCD_OTHER
                      message: Internal Server Error
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                card:
                  $ref: '#/components/schemas/Card'
                paymentContext:
                  $ref: '#/components/schemas/PaymentContext'
                encryptedCustomerData:
                  type: string
                  x-stoplight:
                    id: 732h0nquebxse
                  description: '[ 6 .. 2048 ] characters'
                merchant:
                  $ref: '#/components/schemas/Merchant'
                POI:
                  $ref: '#/components/schemas/POI'
                saleContext:
                  type: string
                  x-stoplight:
                    id: u03ts7ftf6a81
                  description: |
                    16 character description.
                transaction:
                  $ref: '#/components/schemas/Transaction'
              required:
                - card
                - paymentContext
                - merchant
                - POI
                - saleContext
                - transaction
            examples:
              Example 1:
                value:
                  card:
                    context: MSR
                    issuerNumber: 0
                    cardISOType: string
                    maskedPAN: string
                    maskingType: string
                    pinData: string
                    encryptedSensitiveCardDetailsReq: string
                  paymentContext:
                    context: MSR
                    cardReadMethod: MAGSTRIPE
                    cardholderAuthEntity: AUTHORISER
                    cardholderAuthMethod: PIN_OFFLINE_CLEAR
                    cardholderPresent: PRESENT
                    fallback: 'yes'
                    fleetEntryMethod: KEY_ENTRY
                  encryptedCustomerData: string
                  merchant:
                    country: AF
                    categoryNumber: 4784
                    merchantID: string
                    name: string
                    networkID: string
                  POI:
                    siteID: string
                    address:
                      - string
                    POIType: FP
                    POIID: string
                    language: abk
                    readerCapabilities:
                      cardCapture: 'yes'
                      cardReading:
                        - BARCODE
                      cardWriting:
                        - EMV
                      cardholderVerification:
                        - CDCVM
                      environment: MERCHANT_ATTENDED
                      pinLength: 0
                      cashierDisplayCapabilities: 0
                      cardholderDisplayCapabilities: 0
                      cashierPrintCapabilities: 0
                      cardholderPrintCapabilities: 0
                    POITraceNumber: string
                  saleContext: string
                  transaction:
                    currency: AED
                    transactionAmount: string
                    batchNumber: 0
                    dateTimeLocal: '2019-08-24T14:15:22Z'
                    transactionLines:
                      - trxLineSequenceNumber: 99999999
                        productCode: 0
                        productDescription: string
                        additionalProductCode:
                          posCodeFormat: upcA
                          posCodeType: string
                        refillingPointID: string
                        pumpLinked: 0
                        unitPrice: string
                        salesQuantity:
                          value: string
                          uom: L
                        salesAmount: string
                        taxCode: s
                        taxAmount: string
                    serviceLevel: FULL
                    transactionID: string
                    traceNumber: 0
        description: Post the necessary fields for the API to create a new user.
      description: POST to process a payment request (Post-Pay)
    parameters:
      - schema:
          type: string
        name: clientID
        in: path
        required: true
        description: '<= 40 characters Client ID is assigned by ICAD Sistemi to each client, and is agreed before communications is possible. This ID is not used for business processing purposes and can be chosen arbitrarily, but could be a merchant ID or terminal ID or other suitable identifier that is already available.'
      - schema:
          type: string
        name: correlationID
        in: path
        required: true
        description: '[ 1 .. 40 ] characters Correlation ID is a mandatory unique identifier assigned by the client to each customer transaction, which in this context means a group of related messages linked to a single customer event, such as an authorisation and a subsequent reversal. This specification does not define how the correlation ID is derived, because suitable method is dependent on the design of the client and source of transactions. Possibilities could be a sequentially incrementing counter (similar to STAN found in ISO 8583 interfaces), a combination of individual fields (e.g. terminal ID and reliable timestamp) or a GUID'
components:
  schemas:
    Card:
      title: Card
      x-stoplight:
        id: z4mxoz7ptpwiv
      type: object
      properties:
        cardISOType:
          type: string
          x-stoplight:
            id: 45ooj00snwhs2
          description: |
            This is highly dependent on the rules set by the Card Brands. Currently the first 6 digits can be displayed.
        context:
          type: string
          x-stoplight:
            id: ezo90i3szram7
          enum:
            - token
            - MSR
            - ICC
            - CNP
            - NFC
          description: Context identifies the different use cases related to cards.
        encryptedSensitiveCardDetailsReq:
          type: string
          x-stoplight:
            id: yy89joe66vms1
          description: |-
            The JWE data type used to transmit a key. Use base 58 encoding.
            The JWE content is defined in the official documentation under the voice POST/sensitiveCardDetailsReq

            An example is:

            {
              "context": "MSR",
              "track2": "stringst",
              "expiry": {
                "month": 1,
                "year": 1500
              },
              "PAN": "string"
            }
        issuerNumber:
          type: string
          x-stoplight:
            id: xkskvimjkuiyj
          description: |
            Card Issue Number is the card issuer number (also known as card sequence number) if available and applicable to the card type.
        maskedPAN:
          type: string
          x-stoplight:
            id: sfje06z199q4k
          description: |
            Masked Primary Account Number is not present in requests
        maskingType:
          type: string
          x-stoplight:
            id: 0net2beno46ye
          description: |
            Masking type consistent with DE-127-1.34. Specified which digits are masked (bitmap: 0 clear - 1 masked)
        pinData:
          type: string
          x-stoplight:
            id: mf6yrjk23q0j2
      required:
        - cardISOType
        - context
        - encryptedSensitiveCardDetailsReq
        - issuerNumber
        - maskedPAN
        - maskingType
        - pinData
    Merchant:
      title: Merchant
      x-stoplight:
        id: n80pa5afmaqp3
      type: object
      properties:
        country:
          type: string
          x-stoplight:
            id: 75j280syc18oq
          description: |
            ISO-3166 / UN/ECE REC 09 Codes
        categoryNumber:
          type: string
          x-stoplight:
            id: ljcozl76c4hxm
          description: |
            category number is the ISO merchant category code appropriate for the merchant
        merchantID:
          type: string
          x-stoplight:
            id: kes68kpxmegob
          description: |-
            40 character description.

            The only mandatory field, used to identify the fuel station
        name:
          type: string
          x-stoplight:
            id: ve3cun819j3b9
          description: |
            40 character description.
        networkID:
          type: string
          x-stoplight:
            id: 27wh3b1dxmbur
          description: |
            16 character description.
      required:
        - merchantID
    PaymentContext:
      title: PaymentContext
      x-stoplight:
        id: 30048z049p2h2
      type: object
      properties:
        context:
          type: string
          x-stoplight:
            id: j7sazmhwingk5
          enum:
            - token
            - ICC
            - MSR
            - NFC
            - CNP
          description: Context identifies the different use cases related to cards.
        cardReadMethod:
          type: string
          x-stoplight:
            id: or8d4t5ur0bw9
          enum:
            - MAGSTRIPE
            - CONTACLESS_MAGSTRIPE
          description: |
            Card Read Method indicates how the card details were read at the POI
        cardholderAuthEntity:
          type: string
          x-stoplight:
            id: fsqe3vfhuaeam
          enum:
            - AUTHORISER
            - TERMINAL
            - MERCHANT
          description: |
            Cardholder Authentication Entity indicates the party who has authenticated the cardholder. Omitted if cardholder authentication has not been performed at the time the message is created
        cardholderAuthMethod:
          type: string
          x-stoplight:
            id: al64l582ddtxg
          enum:
            - PIN_OFFLINE_CLEAR
            - PIN_ONLINE
            - SIGNATURE
          description: |
            Cardholder Authentication Method indicates how the method by which cardholder has been authenticated, if known
        cardholderPresent:
          type: string
          x-stoplight:
            id: brz6dvgobc9ks
          description: |
            Cardholder Present if the cardholder is present at the POI at the time of transaction
          enum:
            - PRESENT
        fallback:
          type: string
          x-stoplight:
            id: rq3tlemfszdem
          enum:
            - 'yes'
            - 'no'
        fleetEntryMethod:
          type: string
          x-stoplight:
            id: so9pddfgbgy7j
          description: |
            Fleet Entry Method indicates how fleet data was entered at the POI, if known and applicable
      required:
        - context
        - cardReadMethod
        - cardholderAuthEntity
        - cardholderAuthMethod
        - cardholderPresent
        - fallback
    PaymentRequestsResponse:
      title: PaymentRequestsResponse
      x-stoplight:
        id: k0yjyejt0wo7m
      type: object
      properties:
        iccDataResponse:
          type: string
          x-stoplight:
            id: g3uhfwdtido1b
        allowedProducts:
          type: array
          x-stoplight:
            id: itu2w3rob7tpr
          items:
            x-stoplight:
              id: g92xf8vlpjn3n
            type: object
            properties:
              productCode:
                type: integer
                x-stoplight:
                  id: 6d4kr6pdvfn9e
        originalAmount:
          type: string
          x-stoplight:
            id: usawtsktm8w9c
        transactionAmount:
          type: string
          x-stoplight:
            id: lqg9pzga1d9pk
        approvedLimit:
          type: object
          x-stoplight:
            id: 7fvsg431n9aa9
          properties:
            quantity:
              type: object
              x-stoplight:
                id: db92cfs2hzg3o
              properties:
                value:
                  type: string
                  x-stoplight:
                    id: 7z4vxs5jekq04
                uom:
                  type: string
                  x-stoplight:
                    id: 3l51k8cf3yj4d
            amount:
              type: string
              x-stoplight:
                id: pkby1vzkwvlgh
        authorizationCode:
          type: string
          x-stoplight:
            id: g2nvgcphwbwsy
        completionRequired:
          type: string
          x-stoplight:
            id: ruskygrakl9x6
        customerMessage:
          type: string
          x-stoplight:
            id: ic1zmlx3uqslb
        loyaltyRestriction:
          type: string
          x-stoplight:
            id: c60mizpmeqnor
        taxData:
          type: string
          x-stoplight:
            id: 1s9s2ssctxhz9
        transactionID:
          type: string
          x-stoplight:
            id: laqa9tgl5ljo1
    POI:
      title: POI
      x-stoplight:
        id: faud6p8k2wh36
      type: object
      properties:
        siteID:
          type: string
          x-stoplight:
            id: li945ajve5nd1
          description: |
            40 character ID
        address:
          type: string
          x-stoplight:
            id: q0sozvamdjkh9
          description: |
            Point of interaction address
        POIType:
          type: string
          x-stoplight:
            id: 0y4e3l5r2uzth
          description: |
            Types of points of interaction
        POIID:
          type: string
          x-stoplight:
            id: saywfxyq9c11e
          description: 'The only mandatory field, it''s the terminal ID'
        language:
          type: string
          x-stoplight:
            id: 63jls41xxfni0
          description: 'ISO 639 language code, not used'
        readerCapabilities:
          type: object
          x-stoplight:
            id: 53w7qet7i303x
          description: 'This is the schema used to define the capabilities, not used'
          properties:
            cardCapture:
              type: string
              x-stoplight:
                id: w8nl547sq4f8y
              enum:
                - 'yes'
                - 'no'
            cardReading:
              type: string
              x-stoplight:
                id: py89xtnbkfbpq
              description: |
                Card Reading Capability indicates the means of card data entry to the POI. Omitted if unknown
              enum:
                - BARCODE
                - CONTACTLESS_ENV
                - CONTACTLESS_MAGSTRIPE
                - EMV
                - KEY_ENTRY
                - MAGSTRIPE
                - NONE
            cardWriting:
              type: string
              x-stoplight:
                id: 471qtxfw07v7e
              description: |
                Card Writing Capability indicates the means of card data entry to the POI. Omitted if unknown
              enum:
                - EMV
                - MAGSTRIPE
                - NONE
            cardholderVerification:
              type: string
              x-stoplight:
                id: x1y27zbysx4pq
              enum:
                - CDCVM
                - NO_CVM
                - PIN_OFFLINE_CLEAR
                - PIN_OFFLINE_ENCRYPTED
                - PIN_ONLINE
                - SIGNATURE
              description: |
                Card Verification Capability indicates the means of cardholder verification at the POI. Omitted if unknown
            environment:
              type: string
              x-stoplight:
                id: ztkqhra5m8gyb
              enum:
                - MERCHANT_ATTENDED
                - MERCHANT_UNATTENDED
                - CARDHOLDER
              description: |
                Environment indicates the characteristics of the POI. Omitted if unknown
            pinLength:
              type: integer
              x-stoplight:
                id: xqdsqqomyravc
              description: |
                PIN Length indicates the maximum length of PIN supported by the card terminal. Omit this field entirely if the PIN entry length is unknown of the POI does not support PIN entry at all
            cashierDisplayCapabilities:
              type: integer
              x-stoplight:
                id: eu7lxqe68mb17
            cardholderDisplayCapabilities:
              type: integer
              x-stoplight:
                id: h5d195bww2h0r
            cashierPrintCapabilities:
              type: integer
              x-stoplight:
                id: 4fepwbbjllv7w
            cardholderPrintCapabilities:
              type: integer
              x-stoplight:
                id: 86wu35n5lfrey
        POITraceNumber:
          type: string
          x-stoplight:
            id: ll2ux3lexve8h
      required:
        - POIID
    StatusReturn:
      title: StatusReturn
      x-stoplight:
        id: vrer392o9b3nk
      type: object
      properties:
        timestamp:
          type: string
          x-stoplight:
            id: 1xvr5f6b8169z
          format: date-time
        result:
          type: string
          x-stoplight:
            id: yjmtww7nusmvb
          description: Fixed value "success"
        error:
          type: string
          x-stoplight:
            id: hfoox5ul16jq0
          description: Fixed value "ERRCD_OK"
        message:
          type: string
          x-stoplight:
            id: wventropssrr4
      required:
        - timestamp
        - result
        - error
    Transaction:
      title: Transaction
      x-stoplight:
        id: d1spy52xf60vf
      type: object
      properties:
        currency:
          type: string
          x-stoplight:
            id: hv6ul2r6rgz3s
          description: |
            ISO-4217 / UN/ECE REC 09 Codes
        transactionAmount:
          type: string
          x-stoplight:
            id: xhpyajccg3wxy
          description: |
            16,5 decimal value
        batchNumber:
          type: string
          x-stoplight:
            id: z92q3hhm9jqd9
          description: |
            Batch Number indicates the reconciliation batch to which this transaction is assigned. The batch number is assigned by the API client.
        dateTimeLocal:
          type: string
          x-stoplight:
            id: prih5emzqnxbv
        transactionLines:
          type: array
          x-stoplight:
            id: 1bn9dyatj8dwy
          description: |
            List of the article(s) purchased in this transaction.
          items:
            $ref: '#/components/schemas/TransactionLine'
        serviceLevel:
          type: string
          x-stoplight:
            id: gxa9ga6gcvf5a
          enum:
            - FULL
            - SELF
            - INTERNET
          description: |
            Indicates the service rendered at the site, if known and applicable
        transctionID:
          type: string
          x-stoplight:
            id: cktdlqj7hin6u
          description: |
            Unique Message Transaction Identifier
        traceNumber:
          type: integer
          x-stoplight:
            id: oet645xruuf3b
          description: |
            Trace Number is an API client assigned transaction number. This should be a sequentially incrementing number that is unique to each new message sent.
      required:
        - transactionAmount
        - batchNumber
        - dateTimeLocal
        - transactionLines
        - transctionID
        - traceNumber
    TransactionLine:
      title: TransactionLine
      x-stoplight:
        id: jjeeikyfnulla
      type: object
      properties:
        trxLineSequenceNumber:
          type: integer
          x-stoplight:
            id: 47isr5vh96h1e
          description: |
            8 digit numeric value
        productCode:
          type: integer
          x-stoplight:
            id: rsmzw5poies4n
          description: |-
            3 digit numeric value

            0 stands for OIL articles, 1 stands for NON OIL articles
        productDescription:
          type: string
          x-stoplight:
            id: afft60iqcy8xl
          description: |
            40 character description.
        additionalProductCode:
          type: object
          x-stoplight:
            id: 5jh1k9bfnn0or
          required:
            - posCodeType
          properties:
            posCodeFormat:
              type: string
              x-stoplight:
                id: gbwjq5l3t08xk
            posCodeType:
              type: string
              x-stoplight:
                id: wurlnui7t4x4f
              description: 'Article code, <= 14 characters'
        refillingPointID:
          type: string
          x-stoplight:
            id: 4l8sk16xt3mpr
        pumpLinked:
          type: string
          x-stoplight:
            id: fb1vem75xs4lt
        unitPrice:
          type: number
          x-stoplight:
            id: zxl2ssyo3js64
          description: |
            16,5 decimal value
        salesQuantity:
          type: object
          x-stoplight:
            id: u4q6t98bgttdp
          required:
            - value
          properties:
            value:
              type: number
              x-stoplight:
                id: 3ata88uv6m1g0
              description: |
                12,5 decimal value
            uom:
              type: string
              x-stoplight:
                id: 9jjn9k7rkcc13
        salesAmount:
          type: number
          x-stoplight:
            id: tnmxuvxl08cmb
          description: |
            16,5 decimal value
        taxCode:
          type: string
          x-stoplight:
            id: p6xbe6ums5dgq
          description: 'tax code applied to the product, <= 1 characters'
        taxAmount:
          type: number
          x-stoplight:
            id: dnh4wt4qg78zd
          description: |
            16,5 decimal value
      required:
        - trxLineSequenceNumber
        - productCode
        - additionalProductCode
        - unitPrice
        - salesQuantity
        - salesAmount
  securitySchemes:
    API Key - 1:
      type: oauth2
